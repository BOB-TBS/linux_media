/*
 * Silicon Labs Si2168 DVB-T/T2/C demodulator driver
 *
 * Copyright (C) 2014 Antti Palosaari <crope@iki.fi>
 *
 *    This program is free software; you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation; either version 2 of the License, or
 *    (at your option) any later version.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 */

#ifndef SI2168_PRIV_H
#define SI2168_PRIV_H

#include "si2168.h"
#include "dvb_frontend.h"
#include <linux/firmware.h>
#include <linux/i2c-mux.h>

#define SI2168_FIRMWARE "dvb-demod-si2168-01.fw"
#define SI2168A20_2_FIRMWARE "dvb-demod-si2168-03.fw"

/* state struct */
struct si2168 {
	struct i2c_client *client;
	struct i2c_adapter *adapter;
	struct mutex i2c_mutex;
	struct dvb_frontend fe;
	fe_delivery_system_t delivery_system;
	fe_status_t fe_status;
	bool active;

	u8 hw_rev;
	u8 fw_rev;
};

/* firmare command struct */
#define SI2157_ARGLEN      30
struct si2168_cmd {
	u8 args[SI2157_ARGLEN];
	unsigned wlen;
	unsigned rlen;
};


unsigned char si2168_init1_data[] = {
	0x03, 0x10, 0x17, 0x00,
	0x02, 0x10, 0x15, 0x00,
	0x0c, 0x10, 0x12, 0x00,
	0x06, 0x10, 0x24, 0x00,
	0x0b, 0x10, 0x88, 0x13,
	0x07, 0x10, 0x00, 0x24,
	0x0a, 0x10, 0x28, 0x00,
	0x04, 0x10, 0x15, 0x00,
	0x05, 0x10, 0xa1, 0x00,
	0x0f, 0x10, 0x10, 0x00,
	0x0d, 0x10, 0xd0, 0x02,
	0x01, 0x10, 0x56, 0x00,		// crope: \x01\x10\x00\x00
	0x09, 0x10, 0xe3, 0x18,
	0x08, 0x10, 0xd7, 0x15,
};

unsigned char si2168_init2_data[] = {
	0x04, 0x11, 0x70, 0x00,
	0x03, 0x11, 0x64, 0x00,
	0x01, 0x11, 0x00, 0x00,
	0x02, 0x11, 0xf4, 0x1a,
};

unsigned char si2168_init3_data[] = {
	0x04, 0x16, 0x70, 0x00,
	0x03, 0x16, 0x64, 0x00,
	0x01, 0x16, 0x00, 0x00,
	0x02, 0x16, 0xf4, 0x1a,
};

unsigned char si2168_init4_data[] = {
	0x04, 0x03, 0x00, 0x00,
	0x03, 0x03, 0x00, 0x00,
	0x08, 0x03, 0x00, 0x00,
	0x07, 0x03, 0x01, 0x02,
	0x06, 0x03, 0x00, 0x00,
	0x05, 0x03, 0x00, 0x00,
	0x01, 0x03, 0x0c, 0x00,		// crope: \x01\x03\x0c\x40
};

#endif
